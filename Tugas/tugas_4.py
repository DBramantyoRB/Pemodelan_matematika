# -*- coding: utf-8 -*-
"""Tugas 4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fkSYdyhKHCc6TyY-nQMaqugYSUx-54SD
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint

N = 1000
beta = 0.3
sigma = 1/5
gamma = 1/7

def seir_model(y, t, beta, sigma, gamma):
    S, E, I, R = y
    dSdt = -beta * S * I
    dEdt = beta * S * I - sigma * E
    dIdt = sigma * E - gamma * I
    dRdt = gamma * I
    return [dSdt, dEdt, dIdt, dRdt]

I0 = 1
E0 = 0
R0 = 0
S0 = N - 1


t = np.linspace(0, 160, 160)


solu = odeint(seir_model, [S0, E0, I0, R0], t, args=(beta, sigma, gamma))
S, E, I, R = solusi.T


plt.figure(figsize=(10,6))
plt.plot(t, S, label='Susceptible', color='blue')
plt.plot(t, E, label='Exposed', color='orange')
plt.plot(t, I, label='Infected', color='red')
plt.plot(t, R, label='Recovered', color='green')
plt.xlabel('Hari')
plt.ylabel('Jumlah Individu')
plt.title('Model SEIR')
plt.legend()
plt.grid()
plt.show()

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint

N = 1000
beta = 0.3
sigma = 1/5
gamma = 1/7
alfa = 0.00003
delta = 0.0001


def seir_model(y, t, beta, sigma, gamma, mu, nu):
    S, E, I, R = y
    dSdt = delta - beta * S * I - alfa * S
    dEdt = beta * S * I - sigma * E - alfa* E
    dIdt = sigma * E - gamma * I - alfa * I
    dRdt = gamma * I - alfa * R
    return [dSdt, dEdt, dIdt, dRdt]

I0 = 1
E0 = 0
R0 = 0
S0 = N - I0


t = np.linspace(0, 160, 160)


sol = odeint(seir_model, [S0, E0, I0, R0], t, args=(beta, sigma, gamma, mu, nu))
S, E, I, R = sol.T


plt.figure(figsize=(10,6))
plt.plot(t, S, label='Susceptible', color='blue')
plt.plot(t, E, label='Exposed', color='orange')
plt.plot(t, I, label='Infected', color='red')
plt.plot(t, R, label='Recovered', color='green')
plt.xlabel('Hari')
plt.ylabel('Jumlah Individu')
plt.title('Model SEIR dengan Kelahiran dan Kematian')
plt.legend()
plt.grid()
plt.show()